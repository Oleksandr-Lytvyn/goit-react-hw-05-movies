{"version":3,"file":"static/js/134.31180fd5.chunk.js","mappings":"oMAEO,SAASA,EAAT,GAA8B,IAATC,EAAQ,EAARA,KACpBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaH,EAAKI,IAAMC,MAAO,CAAEC,KAAML,GAA/C,SACGD,EAAKO,SAIb,C,uJCPc,SAASC,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAkCJ,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAqCA,OAnCAC,EAAAA,EAAAA,YAAU,YACR,WAA2B,IAAD,EAClBC,EAAC,UAAGH,EAAaI,IAAI,YAApB,QAA4B,GACnCR,EAASO,EACV,CACDE,EACD,KAEDH,EAAAA,EAAAA,YAAU,WAAM,wCACd,yFACgB,KAAVP,EADN,wDAIEG,GAAa,GAJf,mBAQcQ,EAAAA,EAAAA,IAAYX,GAR1B,gBAOcY,EAPd,EAOMC,KAAQD,QAEVb,EAAUa,GATd,kDAWIE,QAAQC,IAAR,MAXJ,yBAaIZ,GAAa,GAbjB,8EADc,uBAAC,WAAD,wBAiBda,EACD,GAAE,CAAChB,KAUF,+BACE,iBAAKiB,UAAU,YAAf,WACE,kBAAMC,SAVZ,SAAkBC,GAEhB,GADAA,EAAMC,iBAC4B,KAA9BD,EAAME,OAAOC,OAAOC,MACtB,OAAOC,MAAM,YAEfvB,EAASkB,EAAME,OAAOC,OAAOC,MAC9B,EAIK,WACE,kBACEE,KAAK,OACLC,KAAK,SAELC,SAAU,SAAAC,GACRtB,EAAgB,CAAEE,EAAGoB,EAAEP,OAAOE,OAC/B,KAEH,mBAAQE,KAAK,SAAb,uBAEDvB,IAAa,6CACd,wBACGJ,EAAO+B,KAAI,SAAAC,GACV,OAAO,SAAC,IAAD,CAA0B1C,KAAM0C,GAAhBA,EAAMtC,GAC9B,UAKV,C","sources":["components/MovieItem/MovieItem.jsx","pages/Movies.jsx"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\n\nexport function MovieItem({ item }) {\n  const location = useLocation();\n  // console.log(location);\n  return (\n    <li>\n      <Link to={`/movies/${item.id}`} state={{ from: location }}>\n        {item.title}\n      </Link>\n    </li>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getApiQuery } from 'components/helpers/getApi';\nimport { MovieItem } from 'components/MovieItem/MovieItem';\n\nexport default function Movies() {\n  const [movies, setMovies] = useState([]);\n  const [query, setQuery] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  useEffect(() => {\n    function fetchBackQuery() {\n      const q = searchParams.get('q') ?? '';\n      setQuery(q);\n    }\n    fetchBackQuery();\n  });\n\n  useEffect(() => {\n    async function fetchQuery() {\n      if (query === '') {\n        return;\n      }\n      setIsLoading(true);\n      try {\n        const {\n          data: { results },\n        } = await getApiQuery(query);\n        setMovies(results);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    fetchQuery();\n  }, [query]);\n\n  function onSubmit(event) {\n    event.preventDefault();\n    if (event.target.search.value === '') {\n      return alert('no query');\n    }\n    setQuery(event.target.search.value);\n  }\n  return (\n    <>\n      <div className=\"container\">\n        <form onSubmit={onSubmit}>\n          <input\n            type=\"text\"\n            name=\"search\"\n            // value={query}\n            onChange={e => {\n              setSearchParams({ q: e.target.value });\n            }}\n          />\n          <button type=\"submit\">search</button>\n        </form>\n        {isLoading && <div>.......loading</div>}\n        <ul>\n          {movies.map(movie => {\n            return <MovieItem key={movie.id} item={movie} />;\n          })}\n        </ul>\n      </div>\n    </>\n  );\n}\n"],"names":["MovieItem","item","location","useLocation","to","id","state","from","title","Movies","useState","movies","setMovies","query","setQuery","isLoading","setIsLoading","useSearchParams","searchParams","setSearchParams","useEffect","q","get","fetchBackQuery","getApiQuery","results","data","console","log","fetchQuery","className","onSubmit","event","preventDefault","target","search","value","alert","type","name","onChange","e","map","movie"],"sourceRoot":""}