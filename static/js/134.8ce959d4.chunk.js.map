{"version":3,"file":"static/js/134.8ce959d4.chunk.js","mappings":"oMAEO,SAASA,EAAT,GAA8B,IAATC,EAAQ,EAARA,KACpBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaH,EAAKI,IAAMC,MAAO,CAAEC,KAAML,GAA/C,SACGD,EAAKO,SAIb,C,uHCRM,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACcC,EAAAA,EAAAA,IACjB,mEAFG,cACCC,EADD,yBAIEA,GAJF,kEAMA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA2BC,GAA3B,uFACcH,EAAAA,EAAAA,IAAA,yEACiDG,EAAMC,cADvD,YADd,cACCH,EADD,yBAIEA,GAJF,kEARPD,EAAAA,EAAAA,SAAAA,QAAyB,4B,uJCGV,SAASK,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOH,EAAP,KAAcM,EAAd,KACA,GAAkCH,EAAAA,EAAAA,WAAS,GAA3C,eAAOI,EAAP,KAAkBC,EAAlB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAqCA,OAnCAC,EAAAA,EAAAA,YAAU,YACR,WAA2B,IAAD,EAClBC,EAAC,UAAGH,EAAaI,IAAI,YAApB,QAA4B,GACnCR,EAASO,EACV,CACDE,EACD,KAEDH,EAAAA,EAAAA,YAAU,WAAM,wCACd,yFACgB,KAAVZ,EADN,wDAIEQ,GAAa,GAJf,mBAQcT,EAAAA,EAAAA,IAAYC,GAR1B,gBAOcgB,EAPd,EAOMlB,KAAQkB,QAEVX,EAAUW,GATd,kDAWIC,QAAQC,IAAR,MAXJ,yBAaIV,GAAa,GAbjB,8EADc,uBAAC,WAAD,wBAiBdW,EACD,GAAE,CAACnB,KAUF,+BACE,iBAAKoB,UAAU,YAAf,WACE,kBAAMC,SAVZ,SAAkBC,GAEhB,GADAA,EAAMC,iBAC4B,KAA9BD,EAAME,OAAOC,OAAOC,MACtB,OAAOC,MAAM,YAEfrB,EAASgB,EAAME,OAAOC,OAAOC,MAC9B,EAIK,WACE,kBACEE,KAAK,OACLC,KAAK,SAELC,SAAU,SAAAC,GACRpB,EAAgB,CAAEE,EAAGkB,EAAEP,OAAOE,OAC/B,KAEH,mBAAQE,KAAK,SAAb,uBAEDrB,IAAa,6CACd,wBACGH,EAAO4B,KAAI,SAAAC,GACV,OAAO,SAAC,IAAD,CAA0B7C,KAAM6C,GAAhBA,EAAMzC,GAC9B,UAKV,C","sources":["components/MovieItem/MovieItem.jsx","components/helpers/getApi.js","pages/Movies.jsx"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\n\nexport function MovieItem({ item }) {\n  const location = useLocation();\n  // console.log(location);\n  return (\n    <li>\n      <Link to={`/movies/${item.id}`} state={{ from: location }}>\n        {item.title}\n      </Link>\n    </li>\n  );\n}\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org';\n\nexport async function getApiHome() {\n  const data = await axios.get(\n    '/3/trending/movie/week?api_key=441b8f442eacb819407bc4b170359715'\n  );\n  return data;\n}\nexport async function getApiQuery(query) {\n  const data = await axios.get(\n    `/3/search/movie?api_key=441b8f442eacb819407bc4b170359715&query=${query.toLowerCase()}&page=1`\n  );\n  return data;\n}\nexport async function getApiDetails(id) {\n  const { data } = await axios\n    .get(`/3/movie/${id}?api_key=441b8f442eacb819407bc4b170359715`)\n    .then(result => {\n      return result;\n    });\n  return data;\n}\nexport async function getApiCast(id) {\n  const data = await axios.get(\n    `/3/movie/${id}/credits?api_key=441b8f442eacb819407bc4b170359715`\n  );\n  return data;\n}\n\nexport async function getApiReviews(id) {\n  const data = await axios.get(\n    `/3/movie/${id}/reviews?api_key=441b8f442eacb819407bc4b170359715&page=1`\n  );\n  return data;\n}\n\n// ------CLASS API-------\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getApiQuery } from 'components/helpers/getApi';\nimport { MovieItem } from 'components/MovieItem/MovieItem';\n\nexport default function Movies() {\n  const [movies, setMovies] = useState([]);\n  const [query, setQuery] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  useEffect(() => {\n    function fetchBackQuery() {\n      const q = searchParams.get('q') ?? '';\n      setQuery(q);\n    }\n    fetchBackQuery();\n  });\n\n  useEffect(() => {\n    async function fetchQuery() {\n      if (query === '') {\n        return;\n      }\n      setIsLoading(true);\n      try {\n        const {\n          data: { results },\n        } = await getApiQuery(query);\n        setMovies(results);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    fetchQuery();\n  }, [query]);\n\n  function onSubmit(event) {\n    event.preventDefault();\n    if (event.target.search.value === '') {\n      return alert('no query');\n    }\n    setQuery(event.target.search.value);\n  }\n  return (\n    <>\n      <div className=\"container\">\n        <form onSubmit={onSubmit}>\n          <input\n            type=\"text\"\n            name=\"search\"\n            // value={query}\n            onChange={e => {\n              setSearchParams({ q: e.target.value });\n            }}\n          />\n          <button type=\"submit\">search</button>\n        </form>\n        {isLoading && <div>.......loading</div>}\n        <ul>\n          {movies.map(movie => {\n            return <MovieItem key={movie.id} item={movie} />;\n          })}\n        </ul>\n      </div>\n    </>\n  );\n}\n"],"names":["MovieItem","item","location","useLocation","to","id","state","from","title","getApiHome","axios","data","getApiQuery","query","toLowerCase","Movies","useState","movies","setMovies","setQuery","isLoading","setIsLoading","useSearchParams","searchParams","setSearchParams","useEffect","q","get","fetchBackQuery","results","console","log","fetchQuery","className","onSubmit","event","preventDefault","target","search","value","alert","type","name","onChange","e","map","movie"],"sourceRoot":""}